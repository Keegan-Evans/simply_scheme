; Chapter 15: Advanced Recursion

; example: Sort

(define (sort sent)
  (if (empty? sent)
    '()
    (se (earliest-word sent)
	(sort (remove-once (earliest-word sent) sent)))))

(define (earliest-word sent)
  (earliest-helper (first sent) (bf sent)))

(define (earliest-helper so-far rest)
  (cond ((empty? rest) so-far)
	((before? so-far (first rest))
	 (earliest-helper so-far (bf rest)))
	(else (earliest-helper (first rest) (bf rest)))))


; example: From-Binary

(define (from-binary-old bits)
  (if (empty? bits)
    0
    (+ (* (first bits) (expt 2 (count (bf bits))))
       (from-binary-old (bf bits)))))
; A more efficient version, reducing the multiplication calls generated by
; expt
(define (from-binary bits)
  (if (empty? bits)
    0
    (+ (* (from-binary (bl bits)) 2)
       (last bits))))

; example Mergesort

(define (mergesort sent)
  (if (<= (count sent) 1)
    sent
    (merge (mergesort (one-half sent))
	   (mergesort (other-half sent)))))

(define (one-half sent)
  (if (<= (count sent) 1)
    sent
    (se (first sent) (one-half (bf (bf sent))))))

(define (other-half sent)
  (if (<= (count sent) 1)
    '()
    (se (first (bf sent)) (other-half (bf (bf sent))))))

; Example: subsets

(define (slow-subsets wd)
  (if (empty? wd)
    (se "")
    (se (slow-subsets (bf wd))
	(prepend-every (first wd) (slow-subsets (bf wd))))))

(define (subsets wd)
  (if (empty? wd)
    (se "")
    (let ((smaller (subsets (bf wd))))
      (se smaller
	  (prepend-every (first wd) smaller)))))
